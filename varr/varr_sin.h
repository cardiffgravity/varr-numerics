/*
 *  This file is part of varr-numerics, an experimental variable resolution
 *  primitive numerics library.
 *
 *  Copyright (C) 2019 Cardiff University
 *
 *  varr-numerics is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  varr-numerics is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with varr-numerics.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __VARR_SIN_H__
#define __VARR_SIN_H__

#include <stddef.h>

/*
 * An object that provides a VARR implementation of the real sine function.
 * 
 * This implementation provides a scalar sine function, 'sind', a function 
 * accepting one real number, x, and returning a VARR approximation of sin(x)
 */
typedef struct tagVARRSinDEvaluator {
   void const * accelerator;
   
   /*
    * A VARR real sine function.  The first argument to this method is 
    * the number, x, for which sin(x) is to be evaluated and returned.
    */
   double (* sind) (double, void const * accelerator);
   
   int (* disallocate) (struct tagVARRSinDEvaluator *);
} VARRSinDEvaluator;

/*
 * Returns an object that provides a VARR implementation of the real 
 * sine function.   See documentation for the type VARRSinDEvaluator
 * for further information.
 * 
 * This function allocates a sampling grid of sine values.  The size of
 * this sampling grid is indicated by the argument 'number_of_samples', which
 * must be nonzero.  The amount of memory allocated by this function is
 * approximately proportional to the number of sampling points requested.  The
 * numerical accuracy of the sine function that is generated by this
 * method generally increases with the number of sampling points requested.
 *
 * This function does not return meaningful values if the input, x, is not 
 * a finite real number.
 */
VARRSinDEvaluator
sampling_sind(size_t number_of_samples);

/*
 * Returns an object that provides a VARR implementation of the real 
 * sine function.   See documentation for the type VARRSinDEvaluator
 * for further information.
 * 
 * This method uses cubic spline techniques to compute the sine.  Memory is
 * allocated for this purpose.  The amount of memory allocated is generally
 * proportional to the value of 'number_of_samples', which must be nonzero.
 * The numerical accuracy of the sine function that is generated by this
 * method generally increases with the number of sampling points requested.
 *
 * This function does not return meaningful values if the input, x, is not 
 * a finite real number or if x is outside of the range 0 <= x <= 2*pi.
 */
VARRSinDEvaluator
cubic_spline_sampling_sind(size_t number_of_samples);

#endif /* __VARR_SIN_H__ */
